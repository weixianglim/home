{"version":3,"sources":["components/Banner.js","components/pages/ProjectEntryContent.js","components/pages/ProjectEntry.js","images/Projects/Trapped/Trapped.png","images/Projects/Trapped/Start.gif","images/Projects/Trapped/BlueCutscene.gif","images/Projects/Trapped/BluePath.gif","images/Projects/Trapped/BlueEnding.gif","images/Projects/Trapped/PinkCutscene.gif","images/Projects/Trapped/PinkPath.gif","images/Projects/Trapped/PinkEnding.gif","components/pages/Projects/Trapped.js"],"names":["Banner","props","videoSrc","imgSrc","bannerPrimaryTitle","bannerSecondaryTitle","bannerSubTitle","scrollTarget","btnText","fadeScreen","className","src","alt","autoPlay","loop","muted","buttonStyle","buttonSize","elemRef","ProjectEntryContent","forwardRef","ref","contentCallback","playBtnTxt","playLink","Button","linkTo","isExternal","icon","faPlayCircle","ProjectEntry","useEffect","window","scrollTo","top","behavior","bannerImg","projectPrimaryTitle","projectSecondaryTitle","projectSubtitle","playBtnText","projectEntryElem","useRef","Trapped","projectTitle","renderObj","Fragment","BannerImg","Start","to","PinkPath","BluePath","PinkCutscene","PinkEnding","BlueCutscene","BlueEnding","href","target","rel"],"mappings":"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","file":"static/js/21.b745628f.chunk.js","sourcesContent":["import React from 'react'\r\nimport \"../App.css\"\r\nimport \"./Banner.css\"\r\nimport { Button } from \"./Button\"\r\n\r\nconst Banner = (props) => \r\n{\r\n    const { videoSrc, imgSrc, bannerPrimaryTitle, bannerSecondaryTitle, bannerSubTitle, scrollTarget, btnText, fadeScreen } = props;\r\n\r\n    return (\r\n        <div className=\"banner-container\">\r\n\r\n            {/* Display background image or video, if any. */}\r\n            { imgSrc && <img src={imgSrc} alt=\"\"/> }\r\n            { videoSrc && <video src={videoSrc} autoPlay loop muted /> }\r\n\r\n            {/* Display fade screen if desired */}\r\n            { fadeScreen && <div className=\"fadeScreen\"></div>}\r\n\r\n            {/* Seconday main title is optional */}\r\n            { bannerPrimaryTitle && <h1>{bannerPrimaryTitle}</h1> }\r\n            { bannerSecondaryTitle && <h2>{bannerSecondaryTitle}</h2> }\r\n            { bannerSubTitle && <p>{bannerSubTitle}</p> }\r\n\r\n            {/* Banner button, will scroll to element on click */}\r\n            {btnText &&\r\n            <div className=\"banner-btns\">\r\n                <Button className=\"btn\" buttonStyle=\"btn--outline\" buttonSize=\"btn--large\" elemRef={scrollTarget}>\r\n                    {btnText}\r\n                </Button>\r\n            </div>}\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Banner\r\n","import React, { forwardRef } from 'react';\r\nimport \"../../App.css\"\r\nimport \"./ProjectEntry.css\"\r\nimport { Button } from \"../Button\"\r\n\r\n// Import icons\r\nimport { FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport { faPlayCircle } from '@fortawesome/free-solid-svg-icons';\r\n\r\n// Project entry content is created as a separate\r\n// component to set elemRef scroll target.\r\nconst ProjectEntryContent = forwardRef((props, ref) => \r\n{\r\n    // Obtain props variables\r\n    const { contentCallback, playBtnTxt, playLink } = props;\r\n\r\n    // Render project entry elements\r\n    return (\r\n        <div ref={ref} className=\"projectEntry\">\r\n            <div className=\"projectEntryContainer\">\r\n                {contentCallback()}\r\n                <div className=\"projectEntryEndButtons\">\r\n                    {playLink &&\r\n                    <Button buttonStyle=\"btn--outline--dark\" linkTo={playLink} isExternal={true}>\r\n                        <FontAwesomeIcon icon={faPlayCircle} />{\" \"}\r\n                        {playBtnTxt ? playBtnTxt : \"Check It Out\"}\r\n                    </Button>}\r\n                    <Button buttonStyle=\"btn--outline--dark\" linkTo=\"/projects\">\r\n                        View More Projects\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n})\r\n\r\nexport default ProjectEntryContent;","import React, { forwardRef, useEffect, useRef } from 'react';\r\nimport \"../../App.css\"\r\nimport Banner from \"../Banner\"\r\nimport \"./ProjectEntry.css\"\r\nimport ProjectEntryContent from \"./ProjectEntryContent\"\r\n\r\n// Forward ref is used to propagate the element up to the parent.\r\n// Currently used to scroll from navbar to this element.\r\nconst ProjectEntry = forwardRef((props, ref) => \r\n{\r\n    // Called once on page load to always start at top of page\r\n    useEffect(() => window.scrollTo({ top: 0, behavior: 'smooth' }), []);\r\n\r\n    // Obtain props variables\r\n    const { bannerImg, projectPrimaryTitle, projectSecondaryTitle, projectSubtitle, contentCallback, fadeScreen, \r\n            btnText, playLink, playBtnText } = props;\r\n\r\n    // Obtain reference for scroll target\r\n    const projectEntryElem = useRef();\r\n\r\n    // Render project entry elements\r\n    return (\r\n        <div ref={ref}>\r\n            {/* Project banner */}\r\n            <Banner \r\n            bannerPrimaryTitle={projectPrimaryTitle}\r\n            bannerSecondaryTitle={projectSecondaryTitle} \r\n            bannerSubTitle={projectSubtitle}\r\n            imgSrc={bannerImg}\r\n            fadeScreen={fadeScreen}\r\n            btnText={btnText}\r\n            scrollTarget={projectEntryElem}\r\n            />\r\n            {/* Project content */}\r\n            <ProjectEntryContent \r\n            ref={projectEntryElem} \r\n            contentCallback={contentCallback} \r\n            playLink={playLink}\r\n            playBtnText={playBtnText}\r\n            />\r\n        </div>\r\n    );\r\n})\r\n\r\nexport default ProjectEntry;","export default __webpack_public_path__ + \"static/media/Trapped.1b4423f1.png\";","export default __webpack_public_path__ + \"static/media/Start.0b07c120.gif\";","export default __webpack_public_path__ + \"static/media/BlueCutscene.012b6b68.gif\";","export default __webpack_public_path__ + \"static/media/BluePath.24e08c4a.gif\";","export default __webpack_public_path__ + \"static/media/BlueEnding.4af457e2.gif\";","export default __webpack_public_path__ + \"static/media/PinkCutscene.457716a2.gif\";","export default __webpack_public_path__ + \"static/media/PinkPath.66269eaa.gif\";","export default __webpack_public_path__ + \"static/media/PinkEnding.d8d7ca6e.gif\";","import React, { forwardRef } from 'react';\r\nimport \"../../../App.css\"\r\nimport ProjectEntry from \"../ProjectEntry\"\r\nimport { Link } from 'react-router-dom'\r\n\r\n// Import images\r\nimport BannerImg from \"../../../images/Projects/Trapped/Trapped.png\"\r\n// import InfoScreen from \"../../../images/Projects/Trapped/Trapped.png\"\r\nimport Start from \"../../../images/Projects/Trapped/Start.gif\"\r\nimport BlueCutscene from \"../../../images/Projects/Trapped/BlueCutscene.gif\"\r\nimport BluePath from \"../../../images/Projects/Trapped/BluePath.gif\"\r\nimport BlueEnding from \"../../../images/Projects/Trapped/BlueEnding.gif\"\r\nimport PinkCutscene from \"../../../images/Projects/Trapped/PinkCutscene.gif\"\r\nimport PinkPath from \"../../../images/Projects/Trapped/PinkPath.gif\"\r\nimport PinkEnding from \"../../../images/Projects/Trapped/PinkEnding.gif\"\r\n\r\n// Forward ref is used to propagate the element up to the parent.\r\n// Currently used to scroll from navbar to this element.\r\nconst Trapped = forwardRef((props, ref) => \r\n{\r\n     // Project title\r\n     const projectTitle = \"Trapped\";\r\n\r\n     // Will be passed into ProjectEntry via the render callback\r\n     const renderObj = (\r\n         <React.Fragment>\r\n            <h1>{projectTitle}</h1>\r\n            <h2>Development</h2>\r\n            <h3>Project Info</h3>\r\n            <img src={BannerImg} alt=\"\" />\r\n            <div className=\"projectInfo\">\r\n                <p>\r\n                    <span className=\"tag\">Gameplay</span>Top Down<br /><span className=\"endLine\" />\r\n                    <span className=\"tag\">Themes</span>Exploration<br /><span />\r\n                                                       Choice<br /><span />\r\n                                                       Sexuality<br /><span className=\"endLine\" />\r\n\r\n                    <span className=\"tag\">Technologies</span>Unity Engine<br /><span />\r\n                                                             C#<br /><span />\r\n                                                             Post-Processing<br /><span className=\"endLine\" />\r\n\r\n                    <span className=\"tag\">Contributions</span>All (solo project)\r\n                </p><span className=\"endLine\" />\r\n            </div>\r\n            <h3>Overview</h3>\r\n             <p>\r\n                Trapped follows the life of a closeted protagonist as he tries to maneuver and escape through a dark maze. The game was developed as a solo project for one of my modules\r\n                taken in spring. In this final project, a central theme was chosen and a creative piece will be designed around this central theme in any desired medium.\r\n                The theme for this project is \"Sexuality\", and I've decided to use a game as a medium for this creative project. A game has a very unique trait that the other mediums do not \r\n                provide - player interaction. I took advantage of this by employing \"choice\" as a central pillar of the game.  \r\n             </p>\r\n             <img src={Start} alt=\"\" />\r\n             <h3>Challenges</h3>\r\n             <p>\r\n                 The biggest challenge I faced during development was time constraint. The available development time for this project was very short. I had only approximately 2 weeks to create the \r\n                 entire game from scratch. On top of that, this is a solo effort with no artists to provide assets for the game. I was also swamped with many other mods during this period and was \r\n                 developing another game, {\" \"}\r\n                 <Link to=\"/apotcalypse\">Apotcalypse</Link>\r\n                 , simultaneously. In light of these circumstances, I decided to use simple shapes (cubes, spheres, etc.) for the game's characters, \r\n                 props and environment. This eliminated the need for me to create art assets from the ground up. As the environment is dark, I can utilise Unity Engine's lighting and shader effects to make the \r\n                 game look very asthetically appealing.  \r\n             </p>\r\n             <h3>Game Idea</h3>\r\n             <p>\r\n                Trapped is a top-down game taking place in a dark environment. \r\n                Only a small window of “lit-up” view will be available to the player, everything outside this view window will be intentionally dark. As players maneuver through \r\n                the environment, they will encounter bright blue and pink glowing objects that they can pick up. Selecting the pink one destroys the blue one (and vice versa). Once \r\n                a glow object is picked, a path will be lit up to guide the player along that path. The game would have 2 different endings, the blue ending (led by the blue objects) and the pink ending (led by\r\n                the pink objects). The goal of the game was to reach one of the 2 endings.\r\n             </p>\r\n             <img src={PinkPath} alt=\"\" />\r\n             <h3>Reason Behind The Concept</h3>\r\n             <p>\r\n                A “dark maze” was chosen to simulate a “dark closet” that the protagonist is trapped in. I want to present the idea of our protagonist “exploring his sexuality” and a maze caters for this perfectly. The blue (male) \r\n                and pink (female) objects symbolizes the choices that he makes while exploring his sexuality – does he conform to the heteronormative society or stay true to himself? Additionally, texts will be splattered across \r\n                the screen each time the player picks up an object to simulate the public’s reactions to each choice. Picking up the blue object will invoke words like “disgusting”, “absolutely horrendous”, etc. while picking up the \r\n                pink object will invoke more pleasant phrases like “you two look good together”, “lovely couple”, etc. These feelings would hopefully put players into the shoes of an individual who is struggling with their sexuality and \r\n                facing public / social stigmatization along the way. The main goal of the game is to educate and expose players to the topic while gaining empathy in the process. \r\n             </p>\r\n             <img src={BluePath} alt=\"\" />\r\n             <h3>The Pink Route</h3>\r\n             <p>\r\n                If players consistently choose the pink route, they will soon find themselves at a cutscene involving 2 blue characters on one side, and a pink character on the other. Shortly after, one of the blue characters separates \r\n                itself from the other and begins to move towards the pink one. An explosion will soon follow and all 3 entities will disappear from the scene afterwards. There are many real-life examples of gay couples \r\n                separating from their partners to be in a straight relationship after societal pressure. Naturally, these situations usually don't go very well. Separation rates are high in these scenarios because quite clearly, one\r\n                party cannot commit to the relationship as much as the other can. As a result, families and relationships are often torn apart. This cutscene aims to highlight this issue. \r\n             </p>\r\n             <img src={PinkCutscene} alt=\"\" />\r\n             <h3>The Pink Ending</h3>\r\n             <p>\r\n                As players continue to follow the pink route, they will arrive at the pink ending. This ending will happen inside of the maze, and the game would portray the protagonist surrounded by houses and cars before \r\n                the screen fades to black and white. Here, the protagonist gets to enjoy the luxury of material stuff like housing but his world fades to black and white in the end. He is also still stuck in the dark maze, implying \r\n                that he is still trapped in the closet.\r\n             </p>\r\n             <img src={PinkEnding} alt=\"\" />\r\n             <h3>The Blue Route</h3>\r\n             <p>\r\n                If players consistently choose the blue route, they will find themselves arriving at a room with very tranquil background music. Players would see both a straight and gay couple finding their partners. More importantly, the entities \r\n                remain in the game scene after the blue event. This is to intentionally draw contrast with the pink cutscene, indicating that both families are still intact.\r\n             </p>\r\n             <img src={BlueCutscene} alt=\"\" />\r\n             <h3>The Blue Ending</h3>\r\n             <p>\r\n                As players continue to follow the blue route, they will arrive at the blue ending. In the blue ending, the player will see an opening in the maze and will automatically walk out of the maze via a long bridge. A body of water around the bridge \r\n                can be seen, and another blue character will be waiting at the end of the bridge. This time, the screen will not fade to black and white and will remain brightly colored. \r\n                This ending was chosen to draw a steep contrast of the large vast open sea against the claustrophobic maze that the player was in just moments before. It also signifies that our protagonist has successfully walked out of the closet. \r\n             </p>\r\n             <img src={BlueEnding} alt=\"\" />\r\n             <h3>Final Reflections And Thoughts</h3>\r\n             <p>\r\n                I have always wanted to design a game and tell a story, but most game projects I have been a part of have designated game designers for the job. It was extremely refreshing to have full creative control to produce a game with the desired mechanics, feel,\r\n                and story exactly how I had intended. Thinking back, I also really appreciate the fact that this is an individual project. I am working on a rather sensitive subject and it would be extremely hard to convince my classmates to be onboard the game idea. If you are \r\n                interested, feel free to download the PC / Mac version of the game by following the link below. I also have a web version, albeit less optimized, hosted on my webpage which you can play directly on the browser{\" \"}\r\n                <a href=\"https://weixianglim.github.io/Trapped/\" target=\"_blank\" rel=\"noreferrer\">here</a>. \r\n             </p><br />\r\n         </React.Fragment>\r\n     );\r\n \r\n     // Delegate rendering to ProjectEntry component\r\n     return (\r\n         <ProjectEntry ref={ref} contentCallback={() => renderObj} \r\n         bannerImg={BannerImg} fadeScreen={true} \r\n         projectPrimaryTitle={projectTitle}\r\n         btnText=\"View Full Info\"\r\n         playLink=\"https://app.box.com/s/k7zrcq1j5422qfo68u0ff1ud5uamy1id\"\r\n         />\r\n     );\r\n})\r\n\r\nexport default Trapped;"],"sourceRoot":""}