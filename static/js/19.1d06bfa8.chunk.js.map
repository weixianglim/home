{"version":3,"sources":["components/Banner.js","components/pages/ProjectEntryContent.js","components/pages/ProjectEntry.js","images/Projects/FishieeProtecc/FishieeProtecc.png","components/pages/Projects/FishieeProtecc.js"],"names":["Banner","props","videoSrc","imgSrc","bannerPrimaryTitle","bannerSecondaryTitle","bannerSubTitle","scrollTarget","btnText","fadeScreen","className","src","alt","autoPlay","loop","muted","buttonStyle","buttonSize","elemRef","ProjectEntryContent","forwardRef","ref","contentCallback","playBtnTxt","playLink","Button","linkTo","isExternal","icon","faPlayCircle","ProjectEntry","useEffect","window","scrollTo","top","behavior","bannerImg","projectPrimaryTitle","projectSecondaryTitle","projectSubtitle","playBtnText","projectEntryElem","useRef","FishieeProtecc","projectTitle","renderObj","Fragment","BannerImg","faMedal","faAward","width","height","url"],"mappings":"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","file":"static/js/19.1d06bfa8.chunk.js","sourcesContent":["import React from 'react'\r\nimport \"../App.css\"\r\nimport \"./Banner.css\"\r\nimport { Button } from \"./Button\"\r\n\r\nconst Banner = (props) => \r\n{\r\n    const { videoSrc, imgSrc, bannerPrimaryTitle, bannerSecondaryTitle, bannerSubTitle, scrollTarget, btnText, fadeScreen } = props;\r\n\r\n    return (\r\n        <div className=\"banner-container\">\r\n\r\n            {/* Display background image or video, if any. */}\r\n            { imgSrc && <img src={imgSrc} alt=\"\"/> }\r\n            { videoSrc && <video src={videoSrc} autoPlay loop muted /> }\r\n\r\n            {/* Display fade screen if desired */}\r\n            { fadeScreen && <div className=\"fadeScreen\"></div>}\r\n\r\n            {/* Seconday main title is optional */}\r\n            { bannerPrimaryTitle && <h1>{bannerPrimaryTitle}</h1> }\r\n            { bannerSecondaryTitle && <h2>{bannerSecondaryTitle}</h2> }\r\n            { bannerSubTitle && <p>{bannerSubTitle}</p> }\r\n\r\n            {/* Banner button, will scroll to element on click */}\r\n            {btnText &&\r\n            <div className=\"banner-btns\">\r\n                <Button className=\"btn\" buttonStyle=\"btn--outline\" buttonSize=\"btn--large\" elemRef={scrollTarget}>\r\n                    {btnText}\r\n                </Button>\r\n            </div>}\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Banner\r\n","import React, { forwardRef } from 'react';\r\nimport \"../../App.css\"\r\nimport \"./ProjectEntry.css\"\r\nimport { Button } from \"../Button\"\r\n\r\n// Import icons\r\nimport { FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport { faPlayCircle } from '@fortawesome/free-solid-svg-icons';\r\n\r\n// Project entry content is created as a separate\r\n// component to set elemRef scroll target.\r\nconst ProjectEntryContent = forwardRef((props, ref) => \r\n{\r\n    // Obtain props variables\r\n    const { contentCallback, playBtnTxt, playLink } = props;\r\n\r\n    // Render project entry elements\r\n    return (\r\n        <div ref={ref} className=\"projectEntry\">\r\n            <div className=\"projectEntryContainer\">\r\n                {contentCallback()}\r\n                <div className=\"projectEntryEndButtons\">\r\n                    {playLink &&\r\n                    <Button buttonStyle=\"btn--outline--dark\" linkTo={playLink} isExternal={true}>\r\n                        <FontAwesomeIcon icon={faPlayCircle} />{\" \"}\r\n                        {playBtnTxt ? playBtnTxt : \"Check It Out\"}\r\n                    </Button>}\r\n                    <Button buttonStyle=\"btn--outline--dark\" linkTo=\"/projects\">\r\n                        View More Projects\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n})\r\n\r\nexport default ProjectEntryContent;","import React, { forwardRef, useEffect, useRef } from 'react';\r\nimport \"../../App.css\"\r\nimport Banner from \"../Banner\"\r\nimport \"./ProjectEntry.css\"\r\nimport ProjectEntryContent from \"./ProjectEntryContent\"\r\n\r\n// Forward ref is used to propagate the element up to the parent.\r\n// Currently used to scroll from navbar to this element.\r\nconst ProjectEntry = forwardRef((props, ref) => \r\n{\r\n    // Called once on page load to always start at top of page\r\n    useEffect(() => window.scrollTo({ top: 0, behavior: 'smooth' }), []);\r\n\r\n    // Obtain props variables\r\n    const { bannerImg, projectPrimaryTitle, projectSecondaryTitle, projectSubtitle, contentCallback, fadeScreen, \r\n            btnText, playLink, playBtnText } = props;\r\n\r\n    // Obtain reference for scroll target\r\n    const projectEntryElem = useRef();\r\n\r\n    // Render project entry elements\r\n    return (\r\n        <div ref={ref}>\r\n            {/* Project banner */}\r\n            <Banner \r\n            bannerPrimaryTitle={projectPrimaryTitle}\r\n            bannerSecondaryTitle={projectSecondaryTitle} \r\n            bannerSubTitle={projectSubtitle}\r\n            imgSrc={bannerImg}\r\n            fadeScreen={fadeScreen}\r\n            btnText={btnText}\r\n            scrollTarget={projectEntryElem}\r\n            />\r\n            {/* Project content */}\r\n            <ProjectEntryContent \r\n            ref={projectEntryElem} \r\n            contentCallback={contentCallback} \r\n            playLink={playLink}\r\n            playBtnText={playBtnText}\r\n            />\r\n        </div>\r\n    );\r\n})\r\n\r\nexport default ProjectEntry;","export default __webpack_public_path__ + \"static/media/FishieeProtecc.01ecdbcc.png\";","import React, { forwardRef } from 'react';\r\nimport \"../../../App.css\"\r\nimport ProjectEntry from \"../ProjectEntry\"\r\nimport ReactPlayer from 'react-player/lazy'\r\n\r\n// Import icons\r\nimport { FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport { faAward } from '@fortawesome/free-solid-svg-icons';\r\nimport { faMedal } from '@fortawesome/free-solid-svg-icons';\r\n\r\n// Import images\r\nimport BannerImg from \"../../../images/Projects/FishieeProtecc/FishieeProtecc.png\"\r\n// import InfoScreen from \"../../../images/Projects/MindOverMatter/SS1.png\"\r\n\r\n// Forward ref is used to propagate the element up to the parent.\r\n// Currently used to scroll from navbar to this element.\r\nconst FishieeProtecc = forwardRef((props, ref) => \r\n{\r\n    // Project title\r\n    const projectTitle = \"Fishiee Protecc\";\r\n\r\n    // Will be passed into ProjectEntry via the render callback\r\n    const renderObj = (\r\n        <React.Fragment>\r\n            <h1>{projectTitle}</h1>\r\n            <h2>Development</h2>\r\n            <h3>Project Info</h3>\r\n            <img src={BannerImg} alt=\"\" />\r\n            <div className=\"projectInfo\">\r\n                <p>\r\n                    <span className=\"tag\">Themes</span>High-Octane<br /><span />\r\n                                                       Protection<br /><span className=\"endLine\" />\r\n\r\n                    <span className=\"tag\">Technologies</span>C++ Custom Engine<br /><span />\r\n                                                             OpenGL<br /><span className=\"endLine\" />\r\n\r\n                    <span className=\"tag\">My Roles</span>Technical Lead<br /><span />\r\n                                                      Graphics Lead<br /><span />\r\n                                                      Engine Architecture Lead<br /><span />\r\n                                                      Technical Producer<br /><span className=\"endLine\" />\r\n\r\n                    <span className=\"tag\">Contributions</span>Game Engine Architecture<br /><span />\r\n                                                              Graphics Environment (OpenGL)<br /><span />\r\n                                                              Gameplay Programming\r\n                </p><span className=\"endLine\" />\r\n            </div>\r\n            <div className=\"awardsInfo\">\r\n                <h3>Awards <FontAwesomeIcon icon={faMedal}/></h3>\r\n                <p>\r\n                    <FontAwesomeIcon icon={faAward}/><span className=\"awardEntry\">Gumi Asia's Best Freshman Game (Finalist), Digipen Game Awards</span><br />\r\n                </p>\r\n            </div>\r\n            <div className=\"trailer\">\r\n                <h3>Video Trailer</h3>\r\n                <div className=\"player-wrapper\">\r\n                    <ReactPlayer className=\"react-player\" width=\"100%\" height=\"100%\" url=\"https://www.youtube.com/watch?v=lXyaZxPpPMk&ab_channel=wxlim\" />\r\n                </div>\r\n            </div>\r\n            \r\n            <h3>Overview</h3>\r\n            <p>\r\n                FishieProtecc is a fast-paced game which will strain the players reaction speeds and planning abilities. It is my freshman project in DigiPen and was \r\n                nominated for Gumi Asia's Best Freshman Game award. I was the technical lead for this project and handled most of the engine, graphics, scripting and \r\n                gameplay codes. We were given a framework to deal with the graphics and windows creation of the game, but I decided to take the challenge of using OpenGL \r\n                and freeglut instead. This was a project consisting of a small team of 4 programmers without dedicated artists or designers. Despite that, I am extremely \r\n                proud of the overall look and game design of the end product.\r\n            </p>\r\n        </React.Fragment>\r\n    );\r\n\r\n    // Delegate rendering to ProjectEntry component\r\n    return (\r\n        <ProjectEntry ref={ref} contentCallback={() => renderObj} \r\n        bannerImg={BannerImg} fadeScreen={true} \r\n        projectPrimaryTitle={projectTitle}\r\n        btnText=\"View Full Info\"\r\n        playLink=\"https://games.digipen.edu/games/fishieprotecc\"\r\n        />\r\n    );\r\n})\r\n\r\nexport default FishieeProtecc;"],"sourceRoot":""}